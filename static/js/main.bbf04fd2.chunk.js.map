{"version":3,"sources":["gamevariables.js","components/Figure.js","components/WordPool.js","components/Word.js","components/Hangman.js","components/Modal.js","App.js","index.js"],"names":["difficultyMap","difficulty","initialWords","speechBubbles","start","type","url","dead","winning","angry","losing","strokeStyle","strokeWidth","stroke","fill","transition","strokeDasharray","strokeDashoffset","animationName","animationDuration","animationFillMode","svgcontainer","height","width","marginTop","bodyParts","1","cx","cy","r","style","2","x1","y1","x2","y2","3","4","5","6","bodyPartsPath","Figure","wrongs","progress","positiveSpree","negativeSpree","cancelToken","speechRef","useRef","cricleStroke","Audio","lineStroke","speakThought","target","clearTimeout","current","id","setTimeout","console","log","classList","remove","backgroundImage","add","useEffect","Math","random","play","toFixed","position","alignSelf","className","ref","d","Array","map","space","i","WordPool","memoizedLetters","computeAlphabets","useCallback","split","alp","item","find","letter","opacity","fontSize","fontFamily","fontWeight","display","gridTemplateColumns","justifyContent","alignItems","Word","currentIteration","props","flexDirection","gridGap","margin","flexWrap","borderBottom","Hangman","userInput","customWord","winlossRef","useState","word","setWord","loading","setLoading","setMemoizedLetters","setCurrentIteration","setProgress","setWrongs","setPositiveSpree","setNegativeSpree","showScore","setShowScore","cancelTokenRef","handleKeyUp","e","key","match","length","findIndex","prev","remark","includes","winfactor","losefactor","newkey","pop","indexOf","c","replace","newci","l","join","fetchWord","a","fetch","data","json","result","document","addEventListener","removeEventListener","then","clone","wordsLeft","floor","rng","seletedLetter","arrangeWords","minHeight","Modal","startGame","inputSetter","showInput","setShowInput","value","placeholder","onChange","onClick","App","loadHangman","setLoadHangman","setUserInput","hasUserDefinedInput","setHasUserDefinedInput","setDifficulty","mode","val","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bbf04fd2.chunk.js","sourcesContent":["export const difficultyMap = {\r\n  rookie: {\r\n    difficulty: 1,\r\n    initialWords: 0.5,\r\n  },\r\n  intermediate: {\r\n    difficulty: 2,\r\n    initialWords: 0.6,\r\n  },\r\n  master: {\r\n    difficulty: 3,\r\n    initialWords: 0.7,\r\n  },\r\n  expert: {\r\n    difficulty: 4,\r\n    initialWords: 0.8,\r\n  },\r\n};\r\n\r\nexport const alphabets = \"abcdefghijklmnopqrstuvwxyz\";\r\n\r\nexport const speechBubbles = {\r\n  start: {\r\n    type: \"speech\",\r\n    url: \"/images/start-speech.png\",\r\n  },\r\n  dead: {\r\n    type: \"thought\",\r\n    url: \"/images/dead-thought.png\",\r\n  },\r\n  winning: {\r\n    type: \"speech\",\r\n    url: \"/images/winning-speech.png\",\r\n  },\r\n  angry: {\r\n    type: \"thought\",\r\n    url: \"/images/angry-thought.png\",\r\n  },\r\n  losing: {\r\n    type: \"thought\",\r\n    url: \"/images/losing-thought.png\",\r\n  },\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { speechBubbles } from \"../gamevariables\";\r\n\r\nconst strokeStyle = {\r\n  strokeWidth: \"2px\",\r\n  stroke: \"black\",\r\n  fill: \"none\",\r\n  transition: \"all 2s\",\r\n  strokeDasharray: \"400px 400px\",\r\n  strokeDashoffset: \"400px\",\r\n  animationName: \"stroke\",\r\n  animationDuration: \"1s\",\r\n  animationFillMode: \"forwards\",\r\n};\r\n\r\nconst svgcontainer = {\r\n  height: \"200px\",\r\n  width: \"200px\",\r\n  marginTop: \"100px\",\r\n};\r\n\r\nconst bodyParts = {\r\n  1: <circle cx='70%' cy='30%' r='20' style={strokeStyle} />,\r\n  2: <line x1='70%' y1='40%' x2='70%' y2='60%' style={strokeStyle} />,\r\n  3: <line x1='70%' y1='45%' x2='60%' y2='60%' style={strokeStyle} />,\r\n  4: <line x1='70%' y1='45%' x2='80%' y2='60%' style={strokeStyle} />,\r\n  5: <line x1='70%' y1='60%' x2='60%' y2='80%' style={strokeStyle} />,\r\n  6: <line x1='70%' y1='60%' x2='80%' y2='80%' style={strokeStyle} />,\r\n};\r\n\r\nconst bodyPartsPath = [\r\n  <circle\r\n    cx='70%'\r\n    cy='30%'\r\n    r='20'\r\n    style={{ ...strokeStyle, stroke: \"rgba(0,0,0,0.2)\" }}\r\n  />,\r\n  <line\r\n    x1='70%'\r\n    y1='40%'\r\n    x2='70%'\r\n    y2='60%'\r\n    style={{ ...strokeStyle, stroke: \"rgba(0,0,0,0.2)\" }}\r\n  />,\r\n  <line\r\n    x1='70%'\r\n    y1='45%'\r\n    x2='60%'\r\n    y2='60%'\r\n    style={{ ...strokeStyle, stroke: \"rgba(0,0,0,0.2)\" }}\r\n  />,\r\n  <line\r\n    x1='70%'\r\n    y1='45%'\r\n    x2='80%'\r\n    y2='60%'\r\n    style={{ ...strokeStyle, stroke: \"rgba(0,0,0,0.2)\" }}\r\n  />,\r\n  <line\r\n    x1='70%'\r\n    y1='60%'\r\n    x2='60%'\r\n    y2='80%'\r\n    style={{ ...strokeStyle, stroke: \"rgba(0,0,0,0.2)\" }}\r\n  />,\r\n  <line\r\n    x1='70%'\r\n    y1='60%'\r\n    x2='80%'\r\n    y2='80%'\r\n    style={{ ...strokeStyle, stroke: \"rgba(0,0,0,0.2)\" }}\r\n  />,\r\n];\r\n\r\nconst Figure = ({\r\n  wrongs,\r\n  progress,\r\n  positiveSpree,\r\n  negativeSpree,\r\n  cancelToken,\r\n}) => {\r\n  const speechRef = useRef();\r\n  const cricleStroke = new Audio(\"/audio/pencilStroke -circle.mp3\");\r\n  const lineStroke = new Audio(\"/audio/pencilStroke-line.mp3\");\r\n\r\n  const playAudio = () => {\r\n    let pencilStroke;\r\n    if (Math.random() > 0.5) pencilStroke = cricleStroke;\r\n    else pencilStroke = lineStroke;\r\n    pencilStroke.play();\r\n  };\r\n\r\n  const speakThought = (target = \"\") => {\r\n    // clearTimeout(cancelToken);\r\n    clearTimeout(cancelToken);\r\n    if (!target && !speechRef && speechRef.current === null) return;\r\n    const id = setTimeout(() => {\r\n      if (speechRef === null || speechRef.current === null) return;\r\n      console.log(speechRef, speechRef.current);\r\n      speechRef.current.classList.remove(\"pop-animation\");\r\n      // speechRef.current.classList.add(\"pop-animation\");\r\n      speechRef.current.style.backgroundImage = `none`;\r\n    }, 13000);\r\n    cancelToken = id;\r\n    speechRef.current.classList.add(\"pop-animation\");\r\n    speechRef.current.style.backgroundImage = `url(${speechBubbles[target].url})`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    speakThought(\"start\");\r\n    // speechRef.current.style.backgroundImage = `url(${speechBubbles(start.url)})`\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (positiveSpree && positiveSpree % 3 === 0) {\r\n      speakThought(\"winning\");\r\n    }\r\n  }, [positiveSpree]);\r\n\r\n  useEffect(() => {\r\n    if (negativeSpree && negativeSpree % 2 === 0) {\r\n      speakThought(\"losing\");\r\n    }\r\n    if (negativeSpree && negativeSpree % 3 === 0) {\r\n      speakThought(\"angry\");\r\n    }\r\n  }, [negativeSpree]);\r\n\r\n  useEffect(() => {\r\n    if (wrongs) {\r\n      playAudio();\r\n    }\r\n    if (wrongs === 4) {\r\n      speakThought(\"dead\");\r\n    }\r\n    if (wrongs === 5) {\r\n      speakThought(\"dead\");\r\n    }\r\n  }, [wrongs]);\r\n\r\n  useEffect(() => {\r\n    if (progress.toFixed(1) === \"0.7\") {\r\n      speakThought(\"winning\");\r\n    }\r\n    return () => {\r\n      console.log(\"this runs also when old values change....\");\r\n    };\r\n  }, [progress]);\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        // marginRight: \"3vw\",\r\n        alignSelf: \"flex-end\",\r\n      }}\r\n    >\r\n      <div className='speech' ref={speechRef}></div>\r\n      <svg style={svgcontainer}>\r\n        {bodyPartsPath}\r\n        {/* hang-pole */}\r\n        <path\r\n          d='M80 20 L140 20 L140 40 M80 20 L80 195 M40 195 L100 195'\r\n          style={{ ...strokeStyle, strokeDasharray: \"0px 0px\" }}\r\n        ></path>\r\n        {Array(wrongs)\r\n          .fill(0)\r\n          .map((space, i) => {\r\n            return bodyParts[i + 1];\r\n          })}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Figure;\r\n","import React, { useCallback } from \"react\";\r\nimport { alphabets } from \"../gamevariables\";\r\n\r\nconst WordPool = ({ memoizedLetters }) => {\r\n  const computeAlphabets = useCallback(() => {\r\n    return alphabets.split(\"\").map((alp) => {\r\n      const item = memoizedLetters.find(({ letter }) => letter === alp);\r\n      return (\r\n        <span\r\n          style={{\r\n            opacity: !!item ? 1 : 0.3,\r\n            fontSize: \"35px\",\r\n            fontFamily: \"redpen\",\r\n            fontWeight: \"bolder\",\r\n          }}\r\n          className={!!item ? \"lineThrough\" : null}\r\n        >\r\n          {alp}\r\n        </span>\r\n      );\r\n    });\r\n  }, [memoizedLetters]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(10,1fr)\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      {computeAlphabets()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordPool;\r\n","import React from \"react\";\r\n\r\nconst Word = ({ currentIteration, ...props }) => {\r\n  return (\r\n    <section\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-evenly\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <div\r\n        {...props}\r\n        style={{\r\n          display: \"flex\",\r\n          gridGap: \"10px\",\r\n          fontSize: \"2em\",\r\n          margin: \"0 60px\",\r\n          justifyContent: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {currentIteration.split(\"\").map((letter) => {\r\n          return (\r\n            <span\r\n              className='letterstyle'\r\n              style={{\r\n                borderBottom: letter === \" \" ? \"none\" : \"2px solid green\",\r\n              }}\r\n            >\r\n              {letter}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Word;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Figure from \"./Figure\";\r\nimport WordPool from \"./WordPool\";\r\nimport Word from \"./Word\";\r\nimport { difficultyMap } from \"../gamevariables\";\r\n\r\nconst myCustomWord = \"the greatest story\";\r\n\r\nexport default function Hangman({ userInput, customWord }) {\r\n  const winlossRef = useRef();\r\n  const [word, setWord] = useState(userInput);\r\n  const [loading, setLoading] = useState(false);\r\n  const [memoizedLetters, setMemoizedLetters] = useState([]);\r\n  const [currentIteration, setCurrentIteration] = useState(userInput);\r\n  const [progress, setProgress] = useState(0);\r\n  const [wrongs, setWrongs] = useState(0);\r\n  const [positiveSpree, setPositiveSpree] = useState(0);\r\n  const [negativeSpree, setNegativeSpree] = useState(0);\r\n  const difficulty = useRef(difficultyMap[\"expert\"]);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const cancelTokenRef = useRef();\r\n  //only run in initial render\r\n\r\n  const arrangeWords = () => {\r\n    let clone = word.split(\"\");\r\n    let wordsLeft = Math.floor(\r\n      word.replace(\" \", \"\").length * difficulty.current.initialWords\r\n    );\r\n    while (wordsLeft !== 0) {\r\n      const rng = Math.floor(Math.random() * clone.length);\r\n      const seletedLetter = clone[rng];\r\n      if (seletedLetter !== \" \" && seletedLetter !== \"*\") {\r\n        clone[rng] = \"*\";\r\n        wordsLeft -= 1;\r\n      }\r\n    }\r\n    setCurrentIteration(clone.join(\"\"));\r\n  };\r\n\r\n  const handleKeyUp = (e) => {\r\n    clearTimeout(cancelTokenRef.current);\r\n    if (!e.key.match(/[a-zA-Z]/) || e.key.length !== 1) return;\r\n    const isExist = [...memoizedLetters].findIndex(\r\n      (item) => e.key === item.letter\r\n    );\r\n    if (isExist === -1) {\r\n      console.log(\"you pressed a new letter!\");\r\n      setMemoizedLetters((prev) => [\r\n        ...prev,\r\n        {\r\n          letter: e.key,\r\n          remark: word.includes(e.key) ? \"right\" : \"wrong\",\r\n        },\r\n      ]);\r\n    } else {\r\n      console.log(\"you already pressed \" + e.key);\r\n    }\r\n  };\r\n\r\n  const resetVars = () => {\r\n    setPositiveSpree(0);\r\n    setPositiveSpree(0);\r\n    setWrongs(0);\r\n    setProgress(0);\r\n    clearTimeout(cancelTokenRef.current);\r\n    cancelTokenRef.current = null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"am i called everytime - memoized array\");\r\n    if (!memoizedLetters.length) return;\r\n    let winfactor = positiveSpree;\r\n    let losefactor = negativeSpree;\r\n    const { letter: newkey } = [...memoizedLetters].pop();\r\n    const index = word.indexOf(newkey);\r\n    if (index === -1) {\r\n      if (winlossRef.current !== null && winlossRef.current === \"win\") {\r\n        winfactor = 0;\r\n      }\r\n      losefactor += 1;\r\n\r\n      //logic for handling incorrect letter for the word\r\n      setWrongs(wrongs + 1);\r\n      winlossRef.current = \"loss\";\r\n    } else {\r\n      if (winlossRef.current !== null && winlossRef.current === \"win\") {\r\n        losefactor = 0;\r\n      }\r\n      winfactor += 1;\r\n\r\n      let c = progress * word.replace(\" \", \"\").length;\r\n      const newci = currentIteration\r\n        .split(\"\")\r\n        .map((l, i) => {\r\n          console.log(l);\r\n          if (word[i] === newkey) {\r\n            c = c + 1;\r\n            return newkey;\r\n          } else return l;\r\n        })\r\n        .join(\"\");\r\n      setProgress(c / word.replace(\" \", \"\").length);\r\n      setCurrentIteration(newci);\r\n      winlossRef.current = \"win\";\r\n    }\r\n    setPositiveSpree(winfactor);\r\n    setNegativeSpree(losefactor);\r\n  }, [memoizedLetters]);\r\n\r\n  const fetchWord = async () => {\r\n    setMemoizedLetters([]);\r\n    setLoading(true);\r\n    try {\r\n      const data = await fetch(\r\n        `https://random-word-api.herokuapp.com/word?number=1&swear=0`\r\n      );\r\n      const result = await data.json();\r\n      setWord(result.pop());\r\n    } catch (err) {\r\n      setWord(myCustomWord);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (customWord) return;\r\n    fetchWord();\r\n  }, []);\r\n\r\n  // on initial render, the function handlekeyup captured the initial value of memoizedletters,everytime, so calling this function would never actually do the update defined in it as desired and never properly..\r\n  useEffect(() => {\r\n    document.addEventListener(\"keyup\", handleKeyUp);\r\n    return () => {\r\n      document.removeEventListener(\"keyup\", handleKeyUp);\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (progress === 1 || wrongs === 6) {\r\n      setShowScore(true);\r\n      setTimeout(() => {\r\n        setShowScore(false);\r\n        fetchWord().then(() => resetVars());\r\n      }, 3000);\r\n      // fetchWord().then(() => resetVars());\r\n    }\r\n  }, [progress, wrongs]);\r\n\r\n  useEffect(() => {\r\n    arrangeWords();\r\n  }, [word]);\r\n\r\n  return (\r\n    <div className='container App'>\r\n      <header\r\n        style={{\r\n          position: \"relative\",\r\n          minHeight: \"100px\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n        }}\r\n      >\r\n        <div className='scibble-image' />\r\n        <h1 className='logo'>Hangman</h1>\r\n      </header>\r\n      {!loading ? (\r\n        <>\r\n          <Word currentIteration={currentIteration} className='fadeIn' />\r\n          <section className='figure-section'>\r\n            <div className='score-container'>\r\n              {showScore ? (\r\n                <div className='score stamp'>\r\n                  <span>\r\n                    {Math.floor(progress * word.replace(\" \", \"\").length)}\r\n                  </span>\r\n                  <svg\r\n                    style={{\r\n                      height: \"1px\",\r\n                      width: \"100%\",\r\n                      stroke: \"black\",\r\n                      strokeWidth: \"5px\",\r\n                    }}\r\n                  >\r\n                    <line x1='25%' y1='0' x2='100%' y2='0' />\r\n                  </svg>\r\n                  <span>{word.replace(\" \", \"\").length}</span>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <Figure\r\n              wrongs={wrongs}\r\n              progress={progress}\r\n              positiveSpree={positiveSpree}\r\n              negativeSpree={negativeSpree}\r\n              cancelToken={cancelTokenRef.current}\r\n            />\r\n          </section>\r\n          <WordPool memoizedLetters={memoizedLetters} />\r\n        </>\r\n      ) : (\r\n        <div className='loading' />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nconst Modal = ({ startGame, inputSetter, userInput }) => {\r\n  const [showInput, setShowInput] = useState(false);\r\n\r\n  return (\r\n    <section className='modal'>\r\n      {showInput ? (\r\n        <div className='slideRight'>\r\n          <div>\r\n            <input\r\n              type='text'\r\n              value={userInput}\r\n              placeholder={\"enter a word...\"}\r\n              onChange={(e) => inputSetter(e.target.value)}\r\n            />\r\n          </div>\r\n          <button\r\n            style={{\r\n              display: \"block\",\r\n              width: \"100%\",\r\n              margin: \"0\",\r\n            }}\r\n            className='btn'\r\n            onClick={() => startGame(1)}\r\n          >\r\n            submit\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className='slideRight'>\r\n          <h1>Hangman</h1>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            <button className='btn' onClick={() => setShowInput(true)}>\r\n              challenge a friend\r\n            </button>\r\n            <button className='btn' onClick={() => startGame(2)}>\r\n              survival mode\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useRef } from \"react\";\nimport Hangman from \"./components/Hangman\";\nimport \"./App.css\";\nimport Modal from \"./components/Modal\";\nimport { difficultyMap } from \"./gamevariables\";\n\nexport default function App() {\n  const [loadHangman, setLoadHangman] = useState(false);\n  const [userInput, setUserInput] = useState(\"\");\n  const [hasUserDefinedInput, setHasUserDefinedInput] = useState(false);\n  const [difficulty, setDifficulty] = useState(difficultyMap[\"expert\"]);\n  const gameModeRef = useRef();\n\n  const startGame = (mode) => {\n    setLoadHangman(true);\n  };\n\n  const inputSetter = (val) => {\n    setUserInput(val);\n    setHasUserDefinedInput(true);\n  };\n\n  if (loadHangman)\n    return (\n      <Hangman\n        userInput={userInput}\n        customWord={hasUserDefinedInput}\n        difficulty={difficulty}\n      />\n    );\n  return (\n    <Modal\n      startGame={startGame}\n      inputSetter={inputSetter}\n      userInput={userInput}\n      setDifficulty={setDifficulty}\n    />\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}